Description: Converting float values to strings is locale-aware
Bug: https://sourceforge.net/tracker/index.php?func=detail&aid=3493034&group_id=16077&atid=116077
Author: Christophe Dumez <christophe.dumez@intel.com>

---
 src/libical/icalvalue.c |   22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

--- a/src/libical/icalvalue.c
+++ b/src/libical/icalvalue.c
@@ -1052,13 +1052,24 @@ static char* icalvalue_float_as_ical_str
 
     float data;
     char* str;
+    char* old_locale;
     icalerror_check_arg_rz( (value!=0),"value");
     data = icalvalue_get_float(value);
 
+    /* bypass current locale in order to make
+       sure snprintf uses a '.' as a separator
+       set locate to 'C' and keep old locale */
+    old_locale = strdup (setlocale (LC_NUMERIC, NULL));
+    setlocale (LC_NUMERIC, "C");
+
     str = (char*)icalmemory_new_buffer(40);
 
     snprintf(str,40,"%f",data);
 
+    /* restore saved locale */
+    setlocale (LC_NUMERIC, old_locale);
+    free (old_locale);
+
     return str;
 }
 
@@ -1067,14 +1078,25 @@ static char* icalvalue_geo_as_ical_strin
 
     struct icalgeotype data;
     char* str;
+    char* old_locale;
     icalerror_check_arg_rz( (value!=0),"value");
 
     data = icalvalue_get_geo(value);
 
+    /* bypass current locale in order to make
+     * sure snprintf uses a '.' as a separator
+     * set locate to 'C' and keep old locale */
+    old_locale = strdup (setlocale (LC_NUMERIC, NULL));
+    setlocale (LC_NUMERIC, "C");
+
     str = (char*)icalmemory_new_buffer(80);
 
     snprintf(str,80,"%f;%f",data.lat,data.lon);
 
+    /* restore saved locale */
+    setlocale (LC_NUMERIC, old_locale);
+    free (old_locale);
+
     return str;
 }
 
